// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.8.0'
    ext.compose_version = '1.4.0'
    ext.hilt_version = '2.51'
    ext.configSrc = 'unknown'
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.2.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath "de.mannodermaus.gradle.plugins:android-junit5:1.8.2.0"
        classpath "com.google.dagger:hilt-android-gradle-plugin:${hilt_version}"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven {
            url 'https://api.mapbox.com/downloads/v2/releases/maven'
            authentication {
                basic(BasicAuthentication)
            }
            credentials {
                // Do not change the username below.
                // This should always be `mapbox` (not your username).
                username = "mapbox"
                // Use the secret token you stored in gradle.properties as the password
                password = project.properties['MAPBOX_DOWNLOADS_TOKEN'] ?: ""
            }
        }
    }
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}

tasks.register('copy_config') {
    doFirst {
        def config_names = layout.getProjectDirectory().dir("assets").getAsFile().listFiles().collect { it.name }
        if(config_names.contains(findProperty('config_src'))) {
            println("**** The " + findProperty('config_src') + " configuration was chosen! ****")
        } else {
            println("Usage:")
            println("\$ ./gradlew copy_config -Pconfig_src=DIR")
            println("\twhere DIR is one of:")
            config_names.each { println("\t - ${it.name}") }
        }
    }
}

tasks.register('copy_splash', Copy) {
    from layout.getProjectDirectory().file("assets/${findProperty('config_src')}/chest_splash.png")
    into layout.getProjectDirectory().dir("app/src/main/res/drawable")
}

tasks.register('copy_properties', Copy) {
    from layout.getProjectDirectory().file("assets/${findProperty('config_src')}/config.properties")
    into layout.getProjectDirectory().dir("app/src/main/assets")
}
copy_config.finalizedBy copy_splash
copy_config.finalizedBy copy_properties
